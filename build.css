"use client";

import React from "react";
import Img from "../../smallComp/image/Img"; // Adjust import as per your project structure
import { HolographicCard } from "@/components/HolographicCard"; // Adjust import
import { motion } from "framer-motion";

interface Project {
  title: string;
  url: string;
  imgSrc: string;
  description: React.ReactNode;
  tags: string[];
  github?: string;
}

const projects: Project[] = [
  {
    title: "Vision.io",
    url: "https://www.vision.io",
    imgSrc: "/ensvision.jpg",
    description: (
      <>
        At <span className="text-AAsecondary font-semibold">Vision</span>, I developed web3 components 
        for their <span className="text-AAsecondary">web3 application</span> using Next.js and web3 libs. 
        Released NameWrapper with <span className="text-AAsecondary">ERC72</span> support for subdomains.
      </>
    ),
    tags: ["ENS domains", "ENS names", "web3", "NFT", "ERC72"],
  },
  {
    title: "YPredict - v1",
    url: "https://ubiquitous-bublanina-da84ec.netlify.app/",
    imgSrc: "/img/YPredict-v1.jpg",
    description: (
      <>
        Led development of a token project aiming to build a decentralized ecosystem for peer-to-peer transactions,
        including <span className="text-AAsecondary font-semibold">smart contract</span> design and <span className="text-AAsecondary font-semibold">blockchain</span> tech.
      </>
    ),
    tags: ["Token", "ERC20", "Next.js", "Smart contract", "Blockchain"],
    github: "https://github.com/hktitof/Ypredict",
  },
  {
    title: "FeverTokens",
    url: "https://www.fevertokens.io/",
    imgSrc: "/img/feverTokens.png",
    description: (
      <>
        Developed an NFT marketplace focused on decentralized platform scalability,
        showcased at VivaTech2022 Paris. Utilized <span className="text-AAsecondary font-semibold">smart contracts</span> and blockchain.
      </>
    ),
    tags: ["Tokenization", "ERC721", "Solidity", "Smart Contracts", "Blockchain"],
  },
  {
    title: "Speed Typing",
    url: "/typing",
    imgSrc: "/typing.png",
    description: (
      <>
        Typing improvement tool with progress tracking and scoring based on speed & accuracy through detailed statistics.
      </>
    ),
    tags: ["Algorithms", "Framer Motion", "Tailwind CSS", "TypeScript"],
    github: "https://github.com/hktitof/Typing",
  },
  {
    title: "User Data Puller",
    url: "/userdatapuller",
    imgSrc: "/hackme.jpg",
    description: (
      <>
        Browser fingerprinting tool to identify location, IP, software, hardware info using cookies and APIs.
      </>
    ),
    tags: ["Cookies", "Google API", "Data collecting", "IP Address", "Location"],
    github: "https://github.com/hktitof/DataPuller",
  },
  {
    title: "Haircut Appointment",
    url: "https://www.haircut.ma",
    imgSrc: "/haircut.png",
    description: (
      <>
        Barber appointment scheduling & management software with online scheduling, reminders, payments, and marketing tools.
      </>
    ),
    tags: ["Appointment", "Management", "Scheduling", "Booking"],
    github: "https://github.com/hktitof/haircut",
  },
  {
    title: "Call Center Management System",
    url: "https://github.com/hktitof/CallCenter",
    imgSrc: "/CallCenter.png",
    description: (
      <>
        JavaFX call center project handling communications between agents and customers with concurrency & multithreading.
      </>
    ),
    tags: ["JavaFX", "Java Concurrency", "MultiThreading", "MySQL"],
    github: "https://github.com/hktitof/CallCenter",
  },
  // Add two more mock projects to complete 9 cards
  {
    title: "Project Alpha",
    url: "#",
    imgSrc: "/img/project-alpha.jpg",
    description: <>An innovative platform with cutting edge technology and features.</>,
    tags: ["React", "Next.js", "API", "Performance"],
  },
  {
    title: "Project Beta",
    url: "#",
    imgSrc: "/img/project-beta.jpg",
    description: <>A scalable application designed to optimize user experience and reliability.</>,
    tags: ["TypeScript", "Node.js", "GraphQL", "AWS"],
  },
];

// FlipCard component that flips on vertical axis with scale on hover
function FlipCard({
  frontContent,
  backContent,
  className = "",
}: {
  frontContent: React.ReactNode;
  backContent: React.ReactNode;
  className?: string;
}) {
  return (
    <HolographicCard
      className={`group perspective-1000 cursor-pointer w-full h-96 ${className}`}
      // Prevent framer motion flickering by disabling initial animation
      >
      <div className="relative w-full h-full transition-transform duration-700 transform-style-preserve-3d group-hover:rotate-x-180 group-hover:scale-105">
        {/* Front */}
        <div className="absolute inset-0 backface-hidden rounded-3xl overflow-hidden">
          {frontContent}
        </div>
        {/* Back */}
        <div className="absolute inset-0 rotate-x-180 backface-hidden rounded-3xl bg-AAprimary bg-opacity-80 p-6 overflow-auto">
          {backContent}
        </div>
      </div>
    </HolographicCard>
  );
}

export default function ProjectsGrid() {
  return (
    <main
      className="min-h-screen w-full bg-[#0b192f] py-20 px-8 2xl:px-72 lg:px-24 md:px-16 sm:px-8"
      style={{
        background:
          "radial-gradient(circle at center, #142d4c, #0b192f 70%)",
        backgroundSize: "cover",
      }}
    >
      <h2 className="text-AAsecondary font-bold text-4xl mb-12 tracking-wide select-none">
        Some Things I've Built
      </h2>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-12">
        {projects.map(({ title, url, imgSrc, description, tags, github }) => (
          <FlipCard
            key={title}
            frontContent={
              <a
                href={url}
                target="_blank"
                rel="noreferrer"
                className="block relative w-full h-full"
                aria-label={`${title} project front view`}
              >
                <Img
                  src={imgSrc}
                  alt={`${title} screenshot`}
                  className="object-cover w-full h-full rounded-3xl"
                />
                <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4 rounded-b-3xl">
                  <h3 className="text-AAsecondary font-semibold text-xl truncate">
                    {title}
                  </h3>
                </div>
              </a>
            }
            backContent={
              <>
                <h3 className="text-AAsecondary font-bold text-2xl mb-4 select-text">{title}</h3>
                <p className="text-gray-300 text-sm mb-6 select-text">{description}</p>
                <ul className="flex flex-wrap gap-2 text-xs text-gray-400 mb-6">
                  {tags.map((tag) => (
                    <li
                      key={tag}
                      className="border border-gray-600 rounded px-2 py-1 select-text"
                    >
                      {tag}
                    </li>
                  ))}
                </ul>
                <div className="flex space-x-4">
                  {github && (
                    <a
                      href={github}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-AAsecondary hover:text-white transition"
                      aria-label={`GitHub repository of ${title}`}
                    >
                      {/* You can replace below with your GithubIcon component */}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="currentColor"
                        viewBox="0 0 24 24"
                        className="w-6 h-6"
                      >
                        <path d="M12 0C5.37 0 0 5.37 0 12c0 5.3 3.438 9.8 8.205 11.385.6.11.82-.26.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 17.07 3.633 16.7 3.633 16.7c-1.087-.743.083-.728.083-.728 1.204.085 1.84 1.236 1.84 1.236 1.07 1.834 2.808 1.304 3.492.996.107-.774.42-1.305.763-1.605-2.665-.3-5.466-1.334-5.466-5.93 0-1.31.47-2.38 1.235-3.22-.124-.303-.535-1.52.117-3.176 0 0 1.01-.323 3.3 1.23a11.48 11.48 0 0 1 3.003-.404c1.02.005 2.045.138 3.003.404 2.29-1.553 3.3-1.23 3.3-1.23.654 1.657.243 2.874.12 3.176.77.84 1.235 1.91 1.235 3.22 0 4.61-2.807 5.625-5.48 5.92.43.372.823 1.103.823 2.222 0 1.606-.015 2.896-.015 3.286 0 .32.216.694.825.576C20.565 21.795 24 17.297 24 12c0-6.63-5.373-12-12-12z" />
                      </svg>
                    </a>
                  )}
                  <a
                    href={url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-AAsecondary hover:text-white transition"
                    aria-label={`Visit website of ${title}`}
                  >
                    {/* Replace with your ExternalLink icon */}
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      stroke="currentColor"
                      strokeWidth="2"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      className="w-6 h-6"
                      viewBox="0 0 24 24"
                    >
                      <path d="M18 13v6a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                      <polyline points="15 3 21 3 21 9" />
                      <line x1="10" y1="14" x2="21" y2="3" />
                    </svg>
                  </a>
                </div>
              </>
            }
          />
        ))}
      </div>
    </main>
  );
}
